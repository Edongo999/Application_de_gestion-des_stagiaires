/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestiondesstagiaires;



import com.mysql.jdbc.Connection;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

import java.awt.image.BufferedImage;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.File;
import java.io.FileInputStream;
import java.io.FilterInputStream;
import java.io.InputStream;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.MessageFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.Timer;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;



/**
 *
 * @author LANDRY PC
 */
public class Stagiaire1 extends javax.swing.JFrame {
    PreparedStatement pst;
    ResultSet rs;
    Connection con;
   
    

    /**
     * Creates new form Stagiaire1
     */
    public Stagiaire1() {
        initComponents();
        filière();
        service();
        direction();
        Encadreur();
        Etablissement();
        jam();
        
        
      Table();
    }

    Stagiaire1(String s1) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
     public void Connect(){
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/gestion_des_stagiaires","root","");
            
        } catch (Exception e) {
             e.printStackTrace();
        }
    }

   public class CustomTableCellRenderer extends DefaultTableCellRenderer {
    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");

    @Override
    public Component getTableCellRendererComponent(JTable table, Object value,
                                                   boolean isSelected, boolean hasFocus, int row, int column) {
        Component cell = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);

        // Supposons que le nom est dans la colonne 1 et la date de fin dans la colonne 8
        int dateColumn = 8;
        int nameColumn = 0;
        int firstNameColumn = 1;
        int phoneColumn=2;

        try {
            // Vérifier si la date de fin est dans la colonne 8
            if (column == dateColumn || column == nameColumn || column ==firstNameColumn || column==phoneColumn) {
                String dateString = (String) table.getValueAt(row, dateColumn);
                Date endDate = sdf.parse(dateString);
                Date today = new Date();

                // Si la date de fin est aujourd'hui ou dans le passé, colorer en rouge
                if (!endDate.after(today)) {
                    cell.setForeground(Color.RED);
                } else {
                    cell.setForeground(Color.BLACK);
                }
            } else {
                cell.setForeground(Color.BLACK);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        return cell;
    }
}

     
     
     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        txtnomstagiaire = new javax.swing.JTextField();
        txtprenomstagiaire = new javax.swing.JTextField();
        txtphone = new javax.swing.JTextField();
        txtdurée = new javax.swing.JTextField();
        txtidstagiaire = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        txtservice = new javax.swing.JComboBox<>();
        txttype = new javax.swing.JTextField();
        txtniveaustagiaire = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        txtfilière = new javax.swing.JComboBox<>();
        txtnou = new javax.swing.JTextField();
        txtdirection = new javax.swing.JComboBox<>();
        jButton5 = new javax.swing.JButton();
        txtencadreur = new javax.swing.JComboBox<>();
        txtdirection2 = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        lbl2 = new javax.swing.JLabel();
        lbl1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        txtResultat_trouver = new javax.swing.JLabel();
        txtrechercheStagiaire = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableStagiaire = new javax.swing.JTable();
        txtMonth = new javax.swing.JTextField();
        txtMonth1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                WindowOpen(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 51, 153));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("ENREGISTREMENT DES INFORMATIONS DES STAGIAIRES");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 0, 630, 32));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Oppération", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtnomstagiaire.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtnomstagiaire.setForeground(new java.awt.Color(0, 51, 153));
        txtnomstagiaire.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nom", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N
        jPanel2.add(txtnomstagiaire, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 250, 71));

        txtprenomstagiaire.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtprenomstagiaire.setForeground(new java.awt.Color(0, 51, 153));
        txtprenomstagiaire.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Prenom", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N
        txtprenomstagiaire.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtprenomstagiaireActionPerformed(evt);
            }
        });
        jPanel2.add(txtprenomstagiaire, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 20, 248, 71));

        txtphone.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtphone.setForeground(new java.awt.Color(0, 51, 153));
        txtphone.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Téléphone", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N
        jPanel2.add(txtphone, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 20, 250, 71));

        txtdurée.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtdurée.setForeground(new java.awt.Color(0, 51, 153));
        txtdurée.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Durée du stage", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N
        jPanel2.add(txtdurée, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 250, 63));

        txtidstagiaire.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ID", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        jPanel2.add(txtidstagiaire, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 190, 107, 33));

        jButton1.setBackground(new java.awt.Color(0, 51, 153));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestiondesstagiaires/add2.png"))); // NOI18N
        jButton1.setText("AJOUTER");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 160, 56));

        jButton2.setBackground(new java.awt.Color(0, 51, 153));
        jButton2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestiondesstagiaires/update.png"))); // NOI18N
        jButton2.setText("MODIFIER");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 250, 160, 56));

        jButton3.setBackground(new java.awt.Color(0, 51, 153));
        jButton3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestiondesstagiaires/delete.png"))); // NOI18N
        jButton3.setText("SUPPRIMER");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 250, 170, 56));

        jButton4.setBackground(new java.awt.Color(0, 51, 153));
        jButton4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("ACTUALISER");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 250, 152, 53));

        txtservice.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Services", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N
        txtservice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtserviceActionPerformed(evt);
            }
        });
        jPanel2.add(txtservice, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 20, 240, 70));

        txttype.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txttype.setForeground(new java.awt.Color(0, 51, 153));
        txttype.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Type de stage", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N
        txttype.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttypeActionPerformed(evt);
            }
        });
        jPanel2.add(txttype, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 100, 248, 63));

        txtniveaustagiaire.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtniveaustagiaire.setForeground(new java.awt.Color(0, 51, 153));
        txtniveaustagiaire.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Niveau d'étude", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N
        txtniveaustagiaire.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtniveaustagiaireActionPerformed(evt);
            }
        });
        jPanel2.add(txtniveaustagiaire, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 20, 237, 71));

        jButton8.setBackground(new java.awt.Color(0, 51, 153));
        jButton8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton8.setForeground(new java.awt.Color(255, 255, 255));
        jButton8.setText("IMPRESSION");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 250, 143, 56));

        txtfilière.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Filières", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N
        txtfilière.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfilièreActionPerformed(evt);
            }
        });
        jPanel2.add(txtfilière, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 100, 240, 60));

        txtnou.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtnou.setForeground(new java.awt.Color(0, 51, 153));
        txtnou.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ancien ou Nouveau", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N
        txtnou.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnouActionPerformed(evt);
            }
        });
        jPanel2.add(txtnou, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 100, 250, 63));

        txtdirection.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Directions", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N
        txtdirection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtdirectionActionPerformed(evt);
            }
        });
        jPanel2.add(txtdirection, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 100, 232, 60));

        jButton5.setBackground(new java.awt.Color(0, 51, 153));
        jButton5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestiondesstagiaires/exit.png"))); // NOI18N
        jButton5.setText("RETOUR");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 250, 140, 60));

        txtencadreur.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Encadreurs", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N
        txtencadreur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtencadreurActionPerformed(evt);
            }
        });
        jPanel2.add(txtencadreur, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 180, 232, 60));

        txtdirection2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Etablissements", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N
        txtdirection2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtdirection2ActionPerformed(evt);
            }
        });
        jPanel2.add(txtdirection2, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 180, 232, 60));

        jPanel4.setBackground(new java.awt.Color(0, 255, 204));

        lbl2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl2.setText("jLabel17");

        lbl1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbl1.setText("jLabel12");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbl2, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                    .addComponent(lbl1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 250, 230, 60));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 1330, 327));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Stagiaire en cours", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        txtResultat_trouver.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtResultat_trouver.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtResultat_trouver.setText("Resultat");

        txtrechercheStagiaire.setBorder(javax.swing.BorderFactory.createTitledBorder("Rechercher stagiaire par nom"));
        txtrechercheStagiaire.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtrechercheStagiaireActionPerformed(evt);
            }
        });
        txtrechercheStagiaire.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtrechercheStagiaireKeyReleased(evt);
            }
        });

        jScrollPane2.setPreferredSize(new java.awt.Dimension(1326, 472));

        tableStagiaire.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tableStagiaire.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tableStagiaire.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableStagiaireMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tableStagiaireMousePressed(evt);
            }
        });
        tableStagiaire.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tableStagiaireKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tableStagiaire);

        jScrollPane2.setViewportView(jScrollPane1);

        txtMonth.setBorder(javax.swing.BorderFactory.createTitledBorder("Rechercher stagiaire par mois"));
        txtMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMonthActionPerformed(evt);
            }
        });
        txtMonth.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMonthKeyReleased(evt);
            }
        });

        txtMonth1.setBorder(javax.swing.BorderFactory.createTitledBorder("Rechercher stagiaire par établissement"));
        txtMonth1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMonth1ActionPerformed(evt);
            }
        });
        txtMonth1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMonth1KeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1308, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtResultat_trouver, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtMonth1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(txtrechercheStagiaire, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtResultat_trouver, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtrechercheStagiaire)
                    .addComponent(txtMonth)
                    .addComponent(txtMonth1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(234, 234, 234))
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, 1330, 320));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 1400, 690));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
          int p=JOptionPane.showConfirmDialog(null, "Ajouté","add",JOptionPane.YES_NO_OPTION);
        if(p==0){
            try {
            connect con = new connect();
            
            //veification si les informations du stagiaire existe deja
            String checkQuery = "SELECT COUNT(*) FROM stagiaire WHERE nomstagiaire = ? AND prenomstagiaire = ? AND phone = ?";
            PreparedStatement checkPst = con.con.prepareStatement(checkQuery);
            checkPst.setString(1, txtnomstagiaire.getText());
            checkPst.setString(2, txtprenomstagiaire.getText());
            checkPst.setString(3, txtphone.getText());
            
            ResultSet rs = checkPst.executeQuery();
            if (rs.next() && rs.getInt(1)>0) {
              JOptionPane.showMessageDialog(null,"<html><font color='blue'> Le stagiaire existe déjà dans la base de données</font></html>","Erreur",
              JOptionPane.ERROR_MESSAGE );  
            }
            else {
                //Insertion des informations du stagiaire
            
            
            pst = con.con.prepareStatement("insert into stagiaire (nomstagiaire,prenomstagiaire,phone,niveaustagiaire,durée,type,nou,dateD,dateF,filière,service,direction,etablissement,encadreur) values(?,?,?,?,?,?,?,?,?,?,?,?,?,? )" );
            pst.setString(1, txtnomstagiaire.getText());
            pst.setString(2, txtprenomstagiaire.getText());
            pst.setString(3,txtphone.getText());
            pst.setString(4, txtniveaustagiaire.getText());
            pst.setString(5, txtdurée.getText());
            pst.setString(6, txttype.getText());
            pst.setString(7,txtnou.getText());
            SimpleDateFormat t = new SimpleDateFormat("YYYY-MM-dd");
            String dateD = t.format(txtdateD.getDate());
            pst.setString(8, dateD);
            SimpleDateFormat d = new SimpleDateFormat("YYYY-MM-dd");
            String DateF;
                DateF = d.format(txtdateF.getDate());
            pst.setString(9, DateF);
            pst.setString(10,txtfilière.getSelectedItem().toString());
            pst.setString(11,txtservice.getSelectedItem().toString());
            pst.setString(12, txtdirection.getSelectedItem().toString());
            pst.setString(13,txtdirection2.getSelectedItem().toString());
            pst.setString(14, txtencadreur.getSelectedItem().toString());
            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Stagiaire Ajouté");
            Table();
            effacer();
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Echec" + e.getMessage());
            Table();
        }
        }
        
        
      

       
    
    }//GEN-LAST:event_jButton1ActionPerformed
  
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
             int p=JOptionPane.showConfirmDialog(null, "Modifié","update",JOptionPane.YES_NO_OPTION);
        if(p==0){

         try {
            connect con =new connect();
            pst=con.con.prepareStatement("update stagiaire set nomstagiaire=?,prenomstagiaire=?,phone=?,niveaustagiaire=?,durée=?,type=?, nou=?,dateD=?,dateF=?,filière=?,service=?,direction=?,etablissement=?,encadreur=? where idstagiaire=?");
            pst.setString(1, txtnomstagiaire.getText());
            pst.setString(2, txtprenomstagiaire.getText());
            pst.setString(3,txtphone.getText());
            pst.setString(4, txtniveaustagiaire.getText());
            pst.setString(5, txtdurée.getText());
            pst.setString(6, txttype.getText());
            pst.setString(7,txtnou.getText());
            SimpleDateFormat t = new SimpleDateFormat("YYYY-MM-dd");
            String date = t.format(txtdateD.getDate());
            pst.setString(8, date);
            SimpleDateFormat d = new SimpleDateFormat("YYYY-MM-dd");
            String Date = d.format(txtdateF.getDate());
            pst.setString(9, Date);
            pst.setString(10,txtfilière.getSelectedItem().toString());
            pst.setString(11,txtservice.getSelectedItem().toString());
            pst.setString(12, txtdirection.getSelectedItem().toString());
            pst.setString(13,txtdirection2.getSelectedItem().toString());
            pst.setString(14, txtencadreur.getSelectedItem().toString());
            pst.setString(15, txtidstagiaire.getText());
            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Stagiaire Modifié");
            effacer();  
            Table();
            // verifier les stages terminés
            
        } catch (Exception e) {
            e.printStackTrace();
           JOptionPane.showMessageDialog(this, "Echec: " + e.getMessage());
            Table();
        }
        }
      
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int p=JOptionPane.showConfirmDialog(null, "Supprimé","Stagiaire",JOptionPane.YES_NO_OPTION);
        if(p==0){
        try {
            connect con = new connect();
            pst=con.con.prepareStatement("delete from stagiaire where idstagiaire='"+txtidstagiaire.getText()+"'");
            pst.executeUpdate();
            JOptionPane.showMessageDialog(this, "stagiaire supprimé avec succès");
            Table();
        } catch (Exception e) {
            e.printStackTrace();
        }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
         txtnomstagiaire.setText("");
        txtprenomstagiaire.setText("");
        txtphone.setText("");
        txtniveaustagiaire.setText("");
        txttype.setText("");
        txtdurée.setText("");
        txtnou.setText("");
        txtdateD.setDate(null);
        txtdateF.setDate(null);
        txtidstagiaire.setText("");
        Table();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void txtserviceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtserviceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtserviceActionPerformed

    private void txttypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttypeActionPerformed

    private void txtniveaustagiaireActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtniveaustagiaireActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtniveaustagiaireActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        
        MessageFormat header = new MessageFormat("Liste des stagiaires en cours");
        MessageFormat footer = new MessageFormat("Page{0,number, integer}");
        try{
          tableStagiaire.print(JTable.PrintMode.FIT_WIDTH, header, footer);
        }catch(java.awt.print.PrinterException e) {
        System.err.format("Erreur d'impresion",e.getMessage());
        }
       
    }//GEN-LAST:event_jButton8ActionPerformed

    
    
    
    

    private void txtfilièreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfilièreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfilièreActionPerformed

    private void txtnouActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnouActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnouActionPerformed

    private void txtdirectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtdirectionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtdirectionActionPerformed

    private void txtprenomstagiaireActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtprenomstagiaireActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtprenomstagiaireActionPerformed

    private void txtrechercheStagiaireActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtrechercheStagiaireActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtrechercheStagiaireActionPerformed

    private void txtrechercheStagiaireKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtrechercheStagiaireKeyReleased
        rechercheStagiaire();
    }//GEN-LAST:event_txtrechercheStagiaireKeyReleased

    private void tableStagiaireMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableStagiaireMousePressed
      int i = tableStagiaire.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) tableStagiaire.getModel();
        
        txtnomstagiaire.setText(model.getValueAt(i, 0).toString());
        txtprenomstagiaire.setText(model.getValueAt(i, 1).toString());
        txtphone.setText(model.getValueAt(i, 2).toString());
        txtniveaustagiaire.setText(model.getValueAt(i, 3).toString());
        txtdurée.setText(model.getValueAt(i, 4).toString());
        txttype.setText(model.getValueAt(i, 5).toString());
        txtnou.setText(model.getValueAt(i, 6).toString());
        
        String strDate = model.getValueAt(i,7).toString();
        java.util.Date date = null;
        try {
            date = new SimpleDateFormat("yyyy-MM-dd").parse(strDate);
        } catch (ParseException ex) {
            Logger.getLogger(Stagiaire1.class.getName()).log(Level.SEVERE, null, ex);
        }
        txtdateD.setDate(date);
        String stDate = model.getValueAt(i,8).toString();
          try {
            date = new SimpleDateFormat("yyyy-MM-dd").parse(stDate);
        } catch (ParseException ex) {
            Logger.getLogger(Stagiaire1.class.getName()).log(Level.SEVERE, null, ex);
        }
        txtdateF.setDate(date);
        txtfilière.setSelectedItem(model.getValueAt(i, 9).toString());
        txtservice.setSelectedItem(model.getValueAt(i, 10).toString());
        txtdirection.setSelectedItem(model.getValueAt(i, 11).toString());
        txtdirection2.setSelectedItem(model.getValueAt(i, 12).toString());
        txtencadreur.setSelectedItem(model.getValueAt(i, 13).toString());
        txtidstagiaire.setText(model.getValueAt(i, 14).toString());
       
        
        
    }//GEN-LAST:event_tableStagiaireMousePressed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        Stagiaire1.super.dispose();
        Utilisateur1 log = new  Utilisateur1();
        log.setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void txtencadreurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtencadreurActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtencadreurActionPerformed

    private void txtdirection2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtdirection2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtdirection2ActionPerformed

    private void WindowOpen(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_WindowOpen
        // TODO add your handling code here:
        // TODO add your handling code here:
               // TODO add your handling code here:
        // Window Event - Opened
         final int MAX_X = 550;
           final int MIN_X = 90;
          

           Thread animation = new Thread(new Runnable() {
           @Override
           public void run() {
           int x=20;
           int y=2;// label start positions
           boolean checked = true;
           while(true){
               if(checked){
           jLabel12.setLocation(x, y);
           x +=10;
               } else{
                jLabel12.setLocation(x, y);
                x -=10;
               }
               if(x>MAX_X){
            checked=false;
            x=400; //reset the X value
            }
            if(x<MIN_X){
            checked=true;
            }

           try{
           Thread.sleep(200);
           }catch(Exception e) {

           }
           }
           }
           });
           animation.start();
          
    }//GEN-LAST:event_WindowOpen

    private void txtMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMonthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMonthActionPerformed

    private void txtMonthKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMonthKeyReleased
        // TODO add your handling code here:
        rechercherStagiairesParMois();
    }//GEN-LAST:event_txtMonthKeyReleased

    private void txtMonth1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMonth1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMonth1ActionPerformed

    private void txtMonth1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMonth1KeyReleased
        // TODO add your handling code here:
        rechercheStagiaireParEtablissement();
    }//GEN-LAST:event_txtMonth1KeyReleased

    private void tableStagiaireMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableStagiaireMouseClicked
        
          // Vérifier que le clic est un clic droit
    if (evt.getButton() == MouseEvent.BUTTON3) {

        // Obtenir l'index de la ligne cliquée
        int row = tableStagiaire.rowAtPoint(evt.getPoint());

        // Vérifier si une ligne a bien été cliquée
        if (row != -1) {
            // Sélectionner la ligne cliquée
            tableStagiaire.setRowSelectionInterval(row, row);

            // Obtenir le nom et l'ID du stagiaire
            String stagiaireNom = (String) tableStagiaire.getValueAt(row, 0);
            String stagiaireId = (String) tableStagiaire.getValueAt(row, 14);

            // Créer un JLabel avec un texte noir et le nom du stagiaire en gras
            JLabel messageLabel = new JLabel("<html><span style='color:black;'>Voulez-vous envoyer <b>" + stagiaireNom + "</b> dans la liste des anciens stagiaires ?</span></html>");

            // Afficher la boîte de dialogue de confirmation
            int response = JOptionPane.showConfirmDialog(null,
                    messageLabel,
                    "Confirmation",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE);

            // Vérifier la réponse de l'utilisateur
            if (response == JOptionPane.YES_OPTION) {
                // Exécuter l'opération de transfert du stagiaire
                transfererStagiaire(stagiaireId);

                // Afficher un message de confirmation de succès après transfert
                JOptionPane.showMessageDialog(null, "Stagiaire transféré avec succès.");
            } else {
                System.out.println("Action annulée.");
            }
        }
    }



    


    }//GEN-LAST:event_tableStagiaireMouseClicked

    private void tableStagiaireKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableStagiaireKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tableStagiaireKeyPressed

    public void transfererStagiaire(String idStagiaire) {
        try {
           Connect();
            // Récupérer les informations du stagiaire
            pst = con.prepareStatement("SELECT * FROM stagiaire WHERE idstagiaire = ?");
            pst.setString(1, idStagiaire);
            rs = pst.executeQuery();

            if (rs.next()) {
                // Insérer les informations dans la table des anciens stagiaires
                pst = con.prepareStatement("INSERT INTO anciens_stagiaires (nomstagiaire, prenomstagiaire, phone, niveaustagiaire, durée, type, nou, dateD, dateF, filière, service, direction, etablissement, encadreur, idstagiaire) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                pst.setString(1, rs.getString("nomstagiaire"));
                pst.setString(2, rs.getString("prenomstagiaire"));
                pst.setString(3, rs.getString("phone"));
                pst.setString(4, rs.getString("niveaustagiaire"));
                pst.setString(5, rs.getString("durée"));
                pst.setString(6, rs.getString("type"));
                pst.setString(7, rs.getString("nou"));
                pst.setString(8, rs.getString("dateD"));
                pst.setString(9, rs.getString("dateF"));
                pst.setString(10, rs.getString("filière"));
                pst.setString(11, rs.getString("service"));
                pst.setString(12, rs.getString("direction"));
                pst.setString(13, rs.getString("etablissement"));
                pst.setString(14, rs.getString("encadreur"));
                pst.setString(15, rs.getString("idstagiaire"));
                pst.executeUpdate();

                // Supprimer le stagiaire de la table actuelle
                pst = con.prepareStatement("DELETE FROM stagiaire WHERE idstagiaire = ?");
                pst.setString(1, idStagiaire);
                pst.executeUpdate();
            

                
            } else {
                System.out.println("Stagiaire non trouvé.");
            }

        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            closeResources();
        }
    }

    private void closeResources() {
        try {
            if (rs != null) rs.close();
            if (pst != null) pst.close();
            
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    
    



    /**
     * @param args the command line arguments
     */
    
    public void jam() {
            Date s = new Date();
    SimpleDateFormat tgl = new SimpleDateFormat("EEEE-dd-MMM-yyyy");
    SimpleDateFormat jam = new SimpleDateFormat("HH:mm:ss");

    lbl2.setText(tgl.format(s)); // Affiche la date une seule fois

    Timer timer = new Timer(1000, new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            lbl1.setText(jam.format(new Date())); // Met à jour l'heure chaque seconde
        }

              
    });
    timer.start();
}
    
     public void service() {
        try {
            connect con = new connect();
            pst = con.con.prepareStatement("select nomservice  from service");
            rs = pst.executeQuery();
            while (rs.next()) {
                txtservice.addItem(rs.getString("nomservice"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    public void filière() {
        try {
            connect con = new connect();
            pst = con.con.prepareStatement("select nomfilière from filière");
            rs = pst.executeQuery();
            while (rs.next()) {
                txtfilière.addItem(rs.getString("nomfilière"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }
    
     public void direction() {
        try {
            connect con = new connect();
            pst = con.con.prepareStatement("select nomdirection from direction");
            rs = pst.executeQuery();
            while (rs.next()) {
                txtdirection.addItem(rs.getString("nomdirection"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }
     
  
            
            
      
        public void Encadreur() {
        try {
            connect con = new connect();
            pst = con.con.prepareStatement("select nomE from encadreur");
            rs = pst.executeQuery();
            while (rs.next()) {
                txtencadreur.addItem(rs.getString("nomE"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

     
  
        public void Etablissement() {
        try {
            connect con = new connect();
            pst = con.con.prepareStatement("select nometab from etablissement");
            rs = pst.executeQuery();
            while (rs.next()) {
                txtdirection2.addItem(rs.getString("nometab"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }
        
        
        
     public void effacer() {
        txtnomstagiaire.setText("");
        txtprenomstagiaire.setText("");
        txtphone.setText("");
        txtniveaustagiaire.setText("");
        txttype.setText("");
        txtdurée.setText("");
        txtnou.setText("");
        txtdateD.setDate(null);
        txtdateF.setDate(null);
        txtidstagiaire.setText("");
        
        
        
        
        
    }

   
     
  public void Table() {
    String[] stagiaire = {"NOM", "PRENOM", "PHONE", "NIVEAU", "DUREE", "TYPE", "NOU", "DATE-D", "DATE-F", "FILIERE", "SERVICE", "DIRECTION", "ETABLISSEMENT", "ENCADREUR", "ID"};
    DefaultTableModel model = new DefaultTableModel(null, stagiaire);

    try {
        Connect();
        try (Statement st = con.createStatement(); ResultSet rs = st.executeQuery("select * from stagiaire")) {
            int i = 0;
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            Date currentDate = new Date();

            StringBuilder notificationMessage = new StringBuilder(); // Pour regrouper les messages de fin de stage

            while (rs.next()) {
                String[] afficher = new String[15];
                afficher[0] = rs.getString("nomstagiaire");
                afficher[1] = rs.getString("prenomstagiaire");
                afficher[2] = rs.getString("phone");
                afficher[3] = rs.getString("niveaustagiaire");
                afficher[4] = rs.getString("durée");
                afficher[5] = rs.getString("type");
                afficher[6] = rs.getString("nou");
                afficher[7] = rs.getString("dateD");
                afficher[8] = rs.getString("dateF");
                afficher[9] = rs.getString("filière");
                afficher[10] = rs.getString("service");
                afficher[11] = rs.getString("direction");
                afficher[12] = rs.getString("etablissement");
                afficher[13] = rs.getString("encadreur");
                afficher[14] = rs.getString("idstagiaire");

               

                model.addRow(afficher);
                i++;
            }

            txtResultat_trouver.setText(i + ": Résultat trouvé");
            tableStagiaire.setModel(model);

            // Appliquer le renderer personnalisé aux colonnes du nom et de la date de fin
            tableStagiaire.getColumnModel().getColumn(0).setCellRenderer(new CustomTableCellRenderer());
            tableStagiaire.getColumnModel().getColumn(1).setCellRenderer(new CustomTableCellRenderer());
            tableStagiaire.getColumnModel().getColumn(2).setCellRenderer(new CustomTableCellRenderer());
            tableStagiaire.getColumnModel().getColumn(8).setCellRenderer(new CustomTableCellRenderer());

            

        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
            }
        }
    } catch (Exception e) {
        e.printStackTrace();
    }
}

    
          
         
     
  public void rechercheStagiaire() {
        String[] Champ = {"NOM","PRENOM","PHONE","NIVEAU","DUREE","TYPE","NOU","DATE-D","DATE-F","FILIERE","SERVICE","DIRECTION","ETABLISSEMENT","ENCADREUR","ID"};
        String[] afficher = new String[15];
        DefaultTableModel model = new DefaultTableModel(null, Champ);
        try {
            connect con = new connect();
            pst = con.con.prepareStatement("select * from stagiaire where nomstagiaire like '%" + txtrechercheStagiaire.getText().trim() + "%' ");
            rs = pst.executeQuery();
            int i = 0;
            while (rs.next()) {
                afficher[0] = rs.getString("nomstagiaire");
                afficher[1] = rs.getString("prenomstagiaire");
                afficher[2] = rs.getString("phone");
                afficher[3] = rs.getString("niveaustagiaire");
                afficher[4] = rs.getString("durée");
                afficher[5] = rs.getString("type");
                afficher[6] = rs.getString("nou");
                afficher[7] = rs.getString("dateD");
                afficher[8] = rs.getString("dateF");
                afficher[9] = rs.getString("filière");
                afficher[10] = rs.getString("service");
                afficher[11] = rs.getString("direction");
                afficher[12] = rs.getString("etablissement");
                afficher[13] = rs.getString("encadreur"); 
                afficher[14] = rs.getString("idstagiaire");
               
                
                i++;
                txtnomstagiaire.setText(afficher[0]);
                txtprenomstagiaire.setText(afficher[1]);
                txtphone.setText(afficher[2]);
                txtniveaustagiaire.setText(afficher[3]);
                txtdurée.setText(afficher[4]);
                txttype.setText(afficher[5]);
                txtnou.setText(afficher[6]);
              
                

                model.addRow(afficher);
            }
            txtResultat_trouver.setText(i + ":Resultat trouver");
            tableStagiaire.setModel(model);
        } catch (Exception e) {
        }

    }
 
   public void rechercheStagiaireParEtablissement() {
        String[] Champ = {"NOM","PRENOM","PHONE","NIVEAU","DUREE","TYPE","NOU","DATE-D","DATE-F","FILIERE","SERVICE","DIRECTION","ETABLISSEMENT","ENCADREUR","ID"};
        String[] afficher = new String[15];
        DefaultTableModel model = new DefaultTableModel(null, Champ);
        try {
            connect con = new connect();
            pst = con.con.prepareStatement("select * from stagiaire where etablissement like '%" + txtMonth1.getText().trim() + "%' ");
            rs = pst.executeQuery();
            int i = 0;
            while (rs.next()) {
                afficher[0] = rs.getString("nomstagiaire");
                afficher[1] = rs.getString("prenomstagiaire");
                afficher[2] = rs.getString("phone");
                afficher[3] = rs.getString("niveaustagiaire");
                afficher[4] = rs.getString("durée");
                afficher[5] = rs.getString("type");
                afficher[6] = rs.getString("nou");
                afficher[7] = rs.getString("dateD");
                afficher[8] = rs.getString("dateF");
                afficher[9] = rs.getString("filière");
                afficher[10] = rs.getString("service");
                afficher[11] = rs.getString("direction");
                afficher[12] = rs.getString("etablissement");
                afficher[13] = rs.getString("encadreur"); 
                afficher[14] = rs.getString("idstagiaire");
               
                
                i++;
                txtnomstagiaire.setText(afficher[0]);
                txtprenomstagiaire.setText(afficher[1]);
                txtphone.setText(afficher[2]);
                txtniveaustagiaire.setText(afficher[3]);
                txtdurée.setText(afficher[4]);
                txttype.setText(afficher[5]);
                txtnou.setText(afficher[6]);
              
                

                model.addRow(afficher);
            }
            txtResultat_trouver.setText(i + ":Resultat trouver");
            tableStagiaire.setModel(model);
        } catch (Exception e) {
        }

    }
  
  
  private void rechercherStagiairesParMois() {
    try {
        connect con = new connect();
        // Récupérer le mois saisi par l'utilisateur
        String moisSaisi = txtMonth.getText().trim();

        // Vérifier si le mois saisi est valide
        if (moisSaisi.matches("\\d{1,2}")) {
            int month = Integer.parseInt(moisSaisi);

            if (month >= 1 && month <= 12) {
                // Nom des colonnes du tableau
                String[] Champ = {"NOM","PRENOM","PHONE","NIVEAU","DUREE","TYPE","NOU","DATE-D","DATE-F","FILIERE","SERVICE","DIRECTION","ETABLISSEMENT","ENCADREUR","ID"};
                String[] afficher = new String[15];
                DefaultTableModel model = new DefaultTableModel(null, Champ);
                
                //Requete SQL pour selectionner les stagiaires dont le stage se termine au moins saisi
                String query = "SELECT * FROM stagiaire WHERE MONTH(dateF) = ?";
                PreparedStatement pst = con.con.prepareStatement(query);
                pst.setInt(1, month);
                ResultSet rs = pst.executeQuery();
               int i = 0;
                 while (rs.next()) {
                afficher[0] = rs.getString("nomstagiaire");
                afficher[1] = rs.getString("prenomstagiaire");
                afficher[2] = rs.getString("phone");
                afficher[3] = rs.getString("niveaustagiaire");
                afficher[4] = rs.getString("durée");
                afficher[5] = rs.getString("type");
                afficher[6] = rs.getString("nou");
                afficher[7] = rs.getString("dateD");
                afficher[8] = rs.getString("dateF");
                afficher[9] = rs.getString("filière");
                afficher[10] = rs.getString("service");
                afficher[11] = rs.getString("direction");
                afficher[12] = rs.getString("etablissement");
                afficher[13] = rs.getString("encadreur"); 
                afficher[14] = rs.getString("idstagiaire");
               
                 model.addRow(afficher);
                i++;
               
            }
            txtResultat_trouver.setText(i + ":Resultat trouver");
            tableStagiaire.setModel(model);
            } else {
                JOptionPane.showMessageDialog(this, "Veuillez entrer un mois valide (entre 1 et 12).");
            }
        } else {
            
        }
       
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Erreur lors de la recherche : " + e.getMessage());
    }
}


  
  
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Stagiaire1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Stagiaire1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Stagiaire1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Stagiaire1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Stagiaire1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public static javax.swing.JLabel lbl1;
    public static javax.swing.JLabel lbl2;
    private javax.swing.JTable tableStagiaire;
    private javax.swing.JTextField txtMonth;
    private javax.swing.JTextField txtMonth1;
    private javax.swing.JLabel txtResultat_trouver;
    private javax.swing.JComboBox<String> txtdirection;
    private javax.swing.JComboBox<String> txtdirection2;
    private javax.swing.JTextField txtdurée;
    private javax.swing.JComboBox<String> txtencadreur;
    private javax.swing.JComboBox<String> txtfilière;
    private javax.swing.JLabel txtidstagiaire;
    private javax.swing.JTextField txtniveaustagiaire;
    private javax.swing.JTextField txtnomstagiaire;
    private javax.swing.JTextField txtnou;
    private javax.swing.JTextField txtphone;
    private javax.swing.JTextField txtprenomstagiaire;
    private javax.swing.JTextField txtrechercheStagiaire;
    private javax.swing.JComboBox<String> txtservice;
    private javax.swing.JTextField txttype;
    // End of variables declaration//GEN-END:variables
}
